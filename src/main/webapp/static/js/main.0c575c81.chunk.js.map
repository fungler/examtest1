{"version":3,"sources":["apifacade.js","Navbar.js","Login.js","App.js","index.js"],"names":["URL","handleHttpErrors","res","ok","json","Promise","reject","status","fullError","facade","setToken","token","localStorage","setItem","getToken","getItem","loggedIn","logout","removeItem","login","user","pass","options","makeOptions","username","password","promise","fetch","then","method","addToken","body","opts","headers","this","JSON","stringify","Navbar","props","useState","isAuthenticating","setIsAuthenticating","userHasAuthenticated","useEffect","className","exact","to","style","float","onClick","Login","setErr","setUsername","setPassword","redirect","setRedirect","onSubmit","event","preventDefault","data","logInState","roles","catch","err","onChange","target","id","value","placeholder","PrivateRoute","Component","component","rest","render","pathname","state","from","location","Home","LoggedIn","map","elem","index","key","App","setRoles","path","r","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0c575c81.chunk.js","sourcesContent":["//const URL = \"https://martindoi.dk/examtest1\";\r\n//const URL = \"http://localhost:8080/securitystarter\";\r\nconst URL = \"http://localhost:8080/examtest1\";\r\nfunction handleHttpErrors(res) {\r\n    if (!res.ok) {\r\n        return Promise.reject({ status: res.status, fullError: res.json() })\r\n    }\r\n    return res.json();\r\n}\r\n\r\nclass ApiFacade {\r\n    setToken = (token) => {\r\n        localStorage.setItem('jwtToken', token)\r\n    }\r\n\r\n    getToken = () => {\r\n        return localStorage.getItem('jwtToken')\r\n    }\r\n\r\n    loggedIn = () => {\r\n        const loggedIn = this.getToken() != null;\r\n        return loggedIn;\r\n    }\r\n\r\n    logout = () => {\r\n        localStorage.removeItem(\"jwtToken\");\r\n    }\r\n\r\n    login = (user, pass) => {\r\n        const options = this.makeOptions(\"POST\", true, {username: user, password: pass});\r\n        const promise = fetch(URL + \"/api/login\", options) \r\n            .then(handleHttpErrors);\r\n        \r\n        promise.then(res => this.setToken(res.token));\r\n        return promise;\r\n    }\r\n\r\n    makeOptions(method, addToken, body) {\r\n        var opts = {\r\n            method: method,\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                'Accept': 'application/json',\r\n            }\r\n        }\r\n        if (addToken && this.loggedIn()) {\r\n            opts.headers[\"x-access-token\"] = this.getToken();\r\n        }\r\n        if (body) {\r\n            opts.body = JSON.stringify(body);\r\n        }\r\n        return opts;\r\n    }\r\n}\r\n\r\nconst facade = new ApiFacade();\r\nexport default facade;","import React, { useState, useEffect } from \"react\"\r\nimport facade from \"./apifacade\";\r\nimport {\r\n  NavLink,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction Navbar(props) {\r\n    const [isAuthenticating, setIsAuthenticating] = useState(true);\r\n    const [isAuthenticated, userHasAuthenticated] = useState(false);\r\n  \r\n    const logout = () => {\r\n      facade.logout();\r\n      userHasAuthenticated(false);\r\n    }\r\n  \r\n    useEffect(() => {\r\n      onLoad();\r\n    }, []);\r\n  \r\n    function onLoad() {\r\n      userHasAuthenticated(true);\r\n      setIsAuthenticating(false);\r\n    }\r\n  \r\n    return (\r\n      !isAuthenticating &&\r\n      <nav className=\"header\">\r\n        <ul>\r\n          <li>\r\n            <NavLink exact to=\"/\">Home</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/user\">Test</NavLink>\r\n          </li>\r\n  \r\n          {facade.getToken() == null ? (<li style={{ float: \"right\" }}>\r\n            <Link to=\"/login\">Log in</Link>\r\n          </li>) : (<li style={{ float: \"right\" }}><Link to=\"/\" onClick={logout}>Log out</Link></li>)\r\n          }\r\n  \r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n  export default Navbar;","import React, { useState, useEffect } from \"react\"\r\nimport facade from \"./apifacade\";\r\nimport {\r\n    Redirect,\r\n  } from \"react-router-dom\";\r\n\r\nfunction Login(props) {\r\n    const [err, setErr] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [redirect, setRedirect] = useState(false);\r\n  \r\n    const login = (event) => {\r\n      event.preventDefault();\r\n      facade.login(username, password)\r\n        .then(data => { props.logInState(data.roles); setRedirect(true) })\r\n        .catch(err => {\r\n          setErr(\"Wrong username or password\");\r\n        });\r\n    }\r\n  \r\n    const onChange = (event) => {\r\n      setErr(\"\");\r\n      if (event.target.id === \"username\") {\r\n        setUsername(event.target.value);\r\n      } else {\r\n        setPassword(event.target.value);\r\n      }\r\n    }\r\n  \r\n    if(redirect) {\r\n      return <Redirect to=\"/user\" />\r\n    }\r\n  \r\n    return (\r\n      <div className=\"container container-small\">\r\n        <div className=\"wrapper\">\r\n          <h2>Login</h2><br />\r\n          <form className=\"form-signin\" onSubmit={login} onChange={onChange} >\r\n            <div className=\"form form-group\">\r\n              <input className=\"form-control\" placeholder=\"User Name\" id=\"username\" />\r\n            </div><div className=\"form-group\">\r\n              <input className=\"form-control\" placeholder=\"Password\" id=\"password\" /> <br />\r\n              <button className=\"btn btn-primary\">Login</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Login;","import React, { useState, useEffect } from \"react\"\r\nimport facade from \"./apifacade\";\r\nimport Navbar from \"./Navbar\";\r\nimport Login from \"./Login\";\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  NavLink,\r\n  Redirect,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [roles, setRoles] = useState([]);\r\n\r\n  const logInState = (r) => {\r\n    setRoles(r);\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Login logInState={logInState} />\r\n        </Route>\r\n        <PrivateRoute path=\"/user\" component={LoggedIn} roles={roles} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, roles: roles, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => facade.getToken() != null\r\n        ? <Component {...props} roles={roles} />\r\n        : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />} />\r\n  )\r\n}\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"data-wrapper centered-text\"><h1>Homepage</h1></div>\r\n  );\r\n}\r\n\r\nfunction LoggedIn(props) {\r\n  const { roles } = props;\r\n  return (\r\n    <div className=\"data-wrapper\">\r\n      <div className=\"info-box\">\r\n        <h2 className=\"headline\">Data recieved</h2>\r\n        <h4>Roles:</h4>\r\n        {\r\n          roles.map((elem, index) => (<h5 key={index}>{elem}</h5>))\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}